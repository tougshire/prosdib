# Generated by Django 3.2.9 on 2022-02-17 00:29

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='A short description of the issue', max_length=75, verbose_name='title')),
                ('description', models.TextField(blank=True, help_text="The description of the problem if the short description isn't adequate", verbose_name='description')),
                ('priority', models.IntegerField(choices=[(1, '1) Solve a Safety Hazard or Work Stoppage'), (2, '2) Fix a Major Problem or Implement a Major Improvement'), (3, '3) Fix a Highly Important Issue or Implement an Important Solution'), (4, '4) Fix a Moderately Important Issue or Implement a Moderately Importent Solution'), (5, '5) Fix a Minor Issue or implement a minor improvement')], default=4, help_text='The urgency, on a scale of 1 to 5, where 1 is the most urgent', verbose_name='priority')),
                ('begin', models.DateTimeField(default=datetime.datetime.now, help_text='The date and time the project was submitted')),
                ('is_complete', models.BooleanField(blank=True, default=False, help_text='If the problem is resolved', verbose_name='is resolved')),
                ('completion_notes', models.TextField(blank=True, help_text='How the problem was resolved', verbose_name='resolution notes')),
                ('recipient_emails', models.TextField(blank=True, help_text='The comma-separated list of emails of those who should get updates on this project.  By default, emails are sent for changes in notes and resolution status', verbose_name='recipient emails')),
            ],
            options={
                'ordering': ['is_complete', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='The name of the technician', max_length=50, verbose_name='name')),
                ('is_current', models.BooleanField(default=True, help_text='If this technician is current (should receive emails from projects, etc)', verbose_name='current')),
                ('user', models.ForeignKey(blank=True, help_text='The user account associated with this technician', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prosdib_technician', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, help_text='The text of the note', max_length=255, verbose_name='text')),
                ('when', models.DateTimeField(default=datetime.datetime.now, help_text='The date that the note was submitted', verbose_name='when')),
                ('project', models.ForeignKey(help_text='The project to which this note applies', on_delete=django.db.models.deletion.CASCADE, to='prosdib.project')),
                ('submitted_by', models.ForeignKey(help_text='The user who submitted this note', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='submitted by')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='technician',
            field=models.ForeignKey(blank=True, help_text='The technician responsible for responding to this project', null=True, on_delete=django.db.models.deletion.SET_NULL, to='prosdib.technician', verbose_name='technician'),
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True, help_text='The date this change was made', verbose_name='when')),
                ('modelname', models.CharField(help_text='The model to which this change applies', max_length=50, verbose_name='model')),
                ('objectid', models.BigIntegerField(blank=True, help_text='The id of the record that was changed', null=True, verbose_name='object id')),
                ('fieldname', models.CharField(help_text='The that was changed', max_length=50, verbose_name='field')),
                ('old_value', models.TextField(blank=True, help_text='The value of the field before the change', null=True, verbose_name='old value')),
                ('new_value', models.TextField(blank=True, help_text='The value of the field after the change', verbose_name='new value')),
                ('user', models.ForeignKey(help_text='The user who made this change', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prosdib_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-when', 'modelname', 'objectid'),
            },
        ),
    ]
